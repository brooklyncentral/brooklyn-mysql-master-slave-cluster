brooklyn.catalog:
  items:
  - "https://raw.githubusercontent.com/brooklyncentral/common-catalog-utils/master/common-tests/src/main/resources/commontests/common.tests.bom"
  - id: brooklyn-mysql-master-slave-cluster-tests
    version: 0.10.0-SNAPSHOT
    itemType: template
    iconUrl: http://www.mysql.com/common/logos/mysql-logo.svg
    name: MySQL Master Slave Cluster Tests
    item:
      services:
      - type: brooklyn-mysql-master-slave-cluster
        id: target-cluster
        firstMemberSpec:
          $brooklyn:entitySpec:
            type: org.apache.brooklyn.entity.database.mysql.MySqlNode
            name: MySql Master
            defaultDisplayName: MySql Master
            brooklyn.config:
              mysql.server_id: 1
              mysql.template.configuration.url: classpath:///org/apache/brooklyn/entity/database/mysql/mysql_master.conf
              id: master-node
              camp.plan.id: master-node
      - type: test-case
        name: MySQL Master Slave Cluster Tests
        brooklyn.config:
          timeout: 1h
          timeout.initialStartup: 1h
          targetId: target-cluster
        brooklyn.children:
        - type: assert-up-and-running-initial
          name: "1. MySQL Master Slave Cluster up and running"
        - type: test-case
          name: "2. Effector Tests :: executeScript"
          brooklyn.children:
          - type: invoke-effector
            name: "2.1. Create Database"
            target: $brooklyn:entity("target-cluster").attributeWhenReady("cluster.first.entity")
            effector: executeScript
            params:
              commands: |
                CREATE DATABASE temporary;
                USE temporary;
                CREATE TABLE users (name VARCHAR(20), owner VARCHAR(20), creation_date DATE, updated_date DATE);
                INSERT INTO users VALUES ('mysql', 'mysql', CURDATE(), CURDATE())
          - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
            name: "2.2. Check MySQL creating script has been executed"
            runDir: $brooklyn:entity("master-node").attributeWhenReady("run.dir")
            target: $brooklyn:entity("target-cluster").attributeWhenReady("cluster.first.entity")
            command: $brooklyn:formatString("%s/bin/mysql --defaults-file=mymysql.cnf -ss -e 'SELECT count(*) FROM users' temporary", $brooklyn:entity("master-node").attributeWhenReady("expandedinstall.dir"))
            assertStatus:
              equals: 0
            assertOut:
              equals: "1"
            assertErr:
              isEmpty: true
        - type: test-case
          name: "3. Effector Tests :: resize"
          brooklyn.children:
          - type: invoke-effector
            name: "3.1. Resize cluster to 3"
            target: $brooklyn:entity("target-cluster")
            effector: resize
            params:
              desiredSize: 3
          - type: org.apache.brooklyn.test.framework.TestSensor
            name: "3.2. Size of cluster increased to 3"
            targetId: target-cluster
            sensor: group.members.count
            assert:
              equals: 3
          - type: org.apache.brooklyn.test.framework.SimpleShellCommandTest
            name: "3.3. Master reports 2 slaves"
            runDir: $brooklyn:entity("master-node").attributeWhenReady("run.dir")
            target: $brooklyn:entity("target-cluster").attributeWhenReady("cluster.first.entity")
            command: $brooklyn:formatString("%s/bin/mysql --defaults-file=mymysql.cnf -ss -e 'SELECT COUNT(1) FROM information_schema.PROCESSLIST WHERE COMMAND = \"Binlog Dump\";'", $brooklyn:entity("master-node").attributeWhenReady("expandedinstall.dir"))
            assertStatus:
              equals: 0
            assertOut:
              equals: "2"
            assertErr:
              isEmpty: true
##
## Test Case currently invalid :: See https://issues.apache.org/jira/browse/BROOKLYN-403
##
#        - type: test-case
#          name: "4. Effector Tests :: change_password"
#          brooklyn.children:
#          - type: org.apache.brooklyn.test.framework.TestEffector
#            name: "4.1. Invoke change_password Effector"
#            target: $brooklyn:entity("target-cluster").attributeWhenReady("cluster.first.entity")
#            effector: change_password
#            params:
#              password: myPassword
#          - type: org.apache.brooklyn.test.framework.TestSensor
#            name: "4.2. Check MySQL password has changed"
#            target: $brooklyn:entity("target-cluster").attributeWhenReady("cluster.first.entity")
#            sensor: mysql.password
#            assert:
#            - equals: myPassword
